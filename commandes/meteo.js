const { zokou } = require("../framework/zokou");
const axios = require("axios");

/* Je ne suis pas l‚Äôauteur de cette commande, c‚Äôest le travail d‚Äôune IA */
zokou({
  nomCom: "meteo",
  categorie: "SHADOW",
  reaction: "üå§Ô∏è",
  desc: "Donne la m√©t√©o actuelle pour une ville.",
  alias: ["weather"]
}, async (origineMessage, zk, commandeOptions) => {
  const { ms, msgRepondu, arg, repondre, nomAuteurMessage } = commandeOptions;

  if (!arg[0]) {
    return zk.sendMessage(origineMessage, { text: "Veuillez sp√©cifier une ville." });
  }

  const ville = arg[0];

  try {
    // Utiliser une API de g√©ocodage pour obtenir les coordonn√©es de la ville
    const geocodingResponse = await axios.get(`https://geocoding-api.open-meteo.com/v1/search?name=${ville}`);
    const location = geocodingResponse.data.results[0];

    if (!location) {
      return zk.sendMessage(origineMessage, { text: "Ville non trouv√©e. Veuillez r√©essayer avec un nom de ville valide." });
    }

    const latitude = location.latitude;
    const longitude = location.longitude;

    const url = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=true&timezone=auto`;

    const response = await axios.get(url);
    const data = response.data;
    const temperature = data.current_weather.temperature;
    const windSpeed = data.current_weather.windspeed;
    const weatherCode = data.current_weather.weathercode;
    const weatherDescription = getWeatherDescription(weatherCode);

    const weatherInfo = `M√©t√©o √† ${ville}:\nTemp√©rature: ${temperature}¬∞C\nVitesse du vent: ${windSpeed} m/s\nDescription: ${weatherDescription}`;
    zk.sendMessage(origineMessage, { text: weatherInfo });
  } catch (error) {
    zk.sendMessage(origineMessage, { text: "D√©sol√©, je n'ai pas pu r√©cup√©rer la m√©t√©o pour cette ville." });
  }
});

function getWeatherDescription(weatherCode) {
  const weatherDescriptions = {
    0: "Ciel d√©gag√©",
    1: "Principalement clair",
    2: "Partiellement nuageux",
    3: "Couvert",
    45: "Brouillard",
    48: "Brouillard givrant",
    51: "Bruine l√©g√®re",
    53: "Bruine mod√©r√©e",
    55: "Bruine dense",
    56: "Bruine vergla√ßante l√©g√®re",
    57: "Bruine vergla√ßante dense",
    61: "Pluie l√©g√®re",
    63: "Pluie mod√©r√©e",
    65: "Pluie forte",
    66: "Pluie vergla√ßante l√©g√®re",
    67: "Pluie vergla√ßante forte",
    71: "Chute de neige l√©g√®re",
    73: "Chute de neige mod√©r√©e",
    75: "Chute de neige forte",
    77: "Grains de neige",
    80: "Averses de pluie l√©g√®res",
    81: "Averses de pluie mod√©r√©es",
    82: "Averses de pluie violentes",
    85: "Averses de neige l√©g√®res",
    86: "Averses de neige fortes",
    95: "Orage l√©ger ou mod√©r√©",
    96: "Orage avec gr√™le l√©g√®re",
    99: "Orage avec gr√™le forte"
  };

  return weatherDescriptions[weatherCode] || "Conditions m√©t√©orologiques inconnues";
}
